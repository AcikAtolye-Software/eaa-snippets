{
    "EAApi Service": {
        "prefix": [
            "service",
            "s"
        ],
        "body": [
            "import { Injectable, Inject } from \"@nestjs/common\";",
            "import { Repository } from \"typeorm\";",
            "import { BaseService } from \"@eaapi/abstracts/base.service\";",
            "@Injectable()",
            "export class ${1:EntityName}Service extends BaseService<${1:EntityName}> {",
            "  constructor(",
            "    @Inject(\"${1:EntityName}-Repository\")",
            "    protected readonly repository: Repository<${1:EntityName}>",
            "  ) {",
            "    super(repository);",
            "  }",
            "}"
        ],
        "description": "A EAApi Service"
    },
    "EAApi Controller": {
        "prefix": [
            "controller",
            "c"
        ],
        "body": [
            "import { Controller, UseGuards } from \"@nestjs/common\";",
            "import { BaseController } from \"@eaapi/abstracts/base.controller\";",
            "import { LogService } from \"@eaapi/modules/core/log/services/log.service\";",
            "import { AccessTokenGuard } from \"@eaapi/common/guards/accessToken.guard\";",
            "@Controller(\"${2:}\")",
            "@UseGuards(AccessTokenGuard)",
            "@UseGuards(RolesGuard)",
            "export class ${1:EntityName}Controller extends BaseController<${1:EntityName}, any, any> {",
            "  constructor(",
            "   readonly service: ${1:EntityName}Service",
            "   readonly logService: LogService",
            "  ) {",
            "    super(service, logService, \"${1:EntityName}\");",
            "  }",
            "}"
        ],
        "description": "A EAApi Controller"
    },
    "EAApi Module": {
        "prefix": [
            "module",
            "m"
        ],
        "body": [
            "import { Module } from \"@nestjs/common/decorators\";",
            "import { DatabaseModule } from \"@eaapi/modules/core/database/database.module\";",
            "import { getServices } from \"@eaapi/providers/service.provider\";",
            "import { getControllers } from \"@eaapi/providers/controller.provider\";",
            "import { LogModule } from \"@eaapi/modules/core/log/log.module\";",
            "import { getRepositories } from \"@eaapi/providers/repository.provider\";",
            "const entities = [",
            "    ${1:EntityName},",
            "    ${2}",
            "]",
            "@Module({",
            "    imports: [",
            "      DatabaseModule,",
            "      LogModule",
            "    ],",
            "    controllers: getControllers(entities, [], \"${1:EntityName}\"),",
            "    providers: [",
            "      ...getRepositories([]),",
            "      ...getServices(entities, []),",
            "    ],",
            "    exports: [],",
            "  })",
            "export class ${1:EntityName}Module {}"
        ],
        "description": "A EAApi Module"
    },
    "EAApi Entity Extends BaseModel ": {
        "prefix": [
            "BaseModel",
            "bm"
        ],
        "body": [
            "import { Column, Entity, ManyToOne } from \"typeorm\";",
            "import { BaseModel } from \"@eaapi/abstracts/entity/base.model\";",
            "@Entity()",
            "export class ${1:EntityName} extends BaseModel {",
            "}"
        ],
        "description": "A EAApi Entity Extends BaseModel"
    },
    "EAApi Entity Extends Type ": {
        "prefix": [
            "Type",
            "TypeModel",
            "tm",
            "t"
        ],
        "body": [
            "import { Column, Entity, ManyToOne } from \"typeorm\";",
            "import { Type } from \"@eaapi/abstracts/entity/type.model\";",
            "@Entity()",
            "export class ${1:EntityName} extends Type {",
            "}"
        ],
        "description": "A EAApi Entity Extends BaseModel"
    },
    "EAApi Many To One": {
        "prefix": "manytoone",
        "body": [
            "@ManyToOne(() => $1, x => x.$2s)",
            "${1/(.)(.*)/${1:/downcase}$2/}: $1;"
        ],
        "description": "Create a ManyToOne relationship with dynamic entity"
    },
    "EAApi One To One": {
        "prefix": "onetoone",
        "body": [
            "@OneToOne(() => $1, x => x.$2)",
            "${1/(.)(.*)/${1:/downcase}$2/}: $1;"
            //"${1/(.*)${1:/downcase}$2/(Entity)/}: $1;"
        ],
        "description": "Create a OneToOne relationship with dynamic entity"
    },
    "EAApi One To Many": {
        "prefix": "onetomany",
        "body": [
            "@OneToMany(() => $1, x => x.$2)",
            "${1/(.)(.*)/${1:/downcase}$2/}s: $1[];"
        ],
        "description": "Create a OneToMany relationship with dynamic entity"
    },
    
    "EAApi Column": {
        "prefix": "column",
        "body": [
            "@Column()",
            "$1: $2;"
        ],
        "description": "Create a Column"
    }
}